/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadgrupo15.vistas;

import java.awt.Color;
import java.sql.Date;
import java.time.LocalDate;
import java.time.Month;
import java.time.ZoneId;
import javax.swing.JOptionPane;
import universidadgrupo15.accesoADatos.AlumnoData;
import universidadgrupo15.entidades.Alumno;

/**
 *
 * @author Enzo Bulacio
 */
public class VistaAlumno extends javax.swing.JInternalFrame {
    AlumnoData aludata = new AlumnoData();
    
    /**
     * Creates new form VistaAlumno
     */
    public VistaAlumno() {
        initComponents();
        deshabilitarBotones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCalendar1 = new com.toedter.calendar.JCalendar();
        jCalendar2 = new com.toedter.calendar.JCalendar();
        jLabel1 = new javax.swing.JLabel();
        jTFidAlumno = new javax.swing.JTextField();
        jLidAlumno = new javax.swing.JLabel();
        jLApellido = new javax.swing.JLabel();
        jTFApellido = new javax.swing.JTextField();
        jLApellido1 = new javax.swing.JLabel();
        jTFNombre = new javax.swing.JTextField();
        jLApellido2 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jRBEstado = new javax.swing.JRadioButton();
        jLEstado = new javax.swing.JLabel();
        jBBuscas = new javax.swing.JButton();
        jBGuardar = new javax.swing.JButton();
        jBBorrar = new javax.swing.JButton();
        jBActualizar = new javax.swing.JButton();
        jTFDNI = new javax.swing.JTextField();
        jLDNI = new javax.swing.JLabel();
        jBLimpiar = new javax.swing.JButton();
        jBRestaurar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setClosable(true);

        jLabel1.setText("Formulario de Alumno");

        jTFidAlumno.setEnabled(false);

        jLidAlumno.setText("CÃ³digo");

        jLApellido.setText("Apellido *");

        jTFApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFApellidoKeyTyped(evt);
            }
        });

        jLApellido1.setText("Nombre *");

        jTFNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFNombreKeyTyped(evt);
            }
        });

        jLApellido2.setText("Fecha Nac*");

        jDateChooser1.setMaxSelectableDate(new java.util.Date(4102459280000L));
        jDateChooser1.setMinSelectableDate(new java.util.Date(-2208969712000L));
        jDateChooser1.setMinimumSize(new java.awt.Dimension(146, 32));

        jRBEstado.setText("Activo");
        jRBEstado.setEnabled(false);

        jLEstado.setText("Estado");

        jBBuscas.setText("Buscar");
        jBBuscas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscasActionPerformed(evt);
            }
        });

        jBGuardar.setText("Agregar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        jBBorrar.setText("Borrar");
        jBBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarActionPerformed(evt);
            }
        });

        jBActualizar.setText("Actualizar");
        jBActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBActualizarActionPerformed(evt);
            }
        });

        jTFDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFDNIKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFDNIKeyTyped(evt);
            }
        });

        jLDNI.setText("DNI*");

        jBLimpiar.setText("LIMPIAR");
        jBLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiarActionPerformed(evt);
            }
        });

        jBRestaurar.setText("Restaurar");
        jBRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRestaurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(jLDNI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLidAlumno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTFApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                    .addComponent(jTFidAlumno)
                                    .addComponent(jTFDNI)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLApellido1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLApellido2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(jLEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jRBEstado)
                                                .addGap(79, 79, 79))))
                                    .addComponent(jTFNombre))))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBBuscas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBRestaurar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator2))))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFidAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLidAlumno)
                    .addComponent(jBBuscas))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLDNI)
                    .addComponent(jBGuardar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jBActualizar))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLApellido))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBBorrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBRestaurar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBLimpiar)
                        .addContainerGap(14, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLApellido1)
                            .addComponent(jTFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLApellido2)
                                .addGap(26, 26, 26))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRBEstado)
                            .addComponent(jLEstado))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBBuscasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscasActionPerformed
        Alumno alumno = null;
        try{
      
            if (jTFDNI.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Ingrese DNI");
            } else {
                int dni = Integer.parseInt(jTFDNI.getText());
                alumno = aludata.buscarAlumnoPorDni(dni);
            }
    
        jTFidAlumno.setText(String.valueOf(alumno.getIdAlumno()));
        jTFDNI.setText(String.valueOf(alumno.getDni()));
        jTFApellido.setText(alumno.getApellido());
        jTFNombre.setText(alumno.getNombre());
        jDateChooser1.setDate(Date.valueOf(alumno.getFechaNac()));
        jRBEstado.setSelected(alumno.isEstado());
          
        
        } catch (NullPointerException npe) {
            JOptionPane.showMessageDialog(this, "Valor de DNI invÃ¡lido o inexistente");
            limpiar();
        } catch (NumberFormatException nfe){
            JOptionPane.showMessageDialog(this, "No se introdujo un valor VÃ¡lido");
            limpiar();
        }
      deshabilitarBotones();
    }//GEN-LAST:event_jBBuscasActionPerformed

    private void jBLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpiarActionPerformed
        limpiar();
        deshabilitarBotones();
    }//GEN-LAST:event_jBLimpiarActionPerformed

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        Alumno alumno = new Alumno();
        
        try {
        LocalDate ld = jDateChooser1.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
        if (jTFApellido.getText().isEmpty() || jTFNombre.getText().isEmpty() || jTFDNI.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Hay campos vacÃ­os");
            return;
        }
        alumno.setDni(Integer.parseInt(jTFDNI.getText()));
        alumno.setApellido(jTFApellido.getText());
        alumno.setNombre(jTFNombre.getText());
        alumno.setFechaNac(ld);
        alumno.setEstado(true);
        
        
            aludata.agregarAlumno(alumno);
        }catch (NullPointerException npe) {
            JOptionPane.showMessageDialog(this, "Datos invÃ¡lidos o insuficientes para crear un alumno");
        }
        deshabilitarBotones();
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jBBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarActionPerformed
        aludata.borrarAlumno(Integer.parseInt(jTFidAlumno.getText()));
        jRBEstado.setSelected(false);
        deshabilitarBotones();
    }//GEN-LAST:event_jBBorrarActionPerformed

    private void jBActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBActualizarActionPerformed
        //Trae al alumno con el ID en pantalla
        Alumno alumno = aludata.buscarAlumnoPorID(Integer.parseInt(jTFidAlumno.getText()));
        if (jTFApellido.getText().isEmpty() || jTFNombre.getText().isEmpty() || jTFDNI.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Hay campos vacÃ­os");
            return;
        }
        //Setea los parÃ¡metros del alumno con los datos en pantalla.
        alumno.setDni(Integer.parseInt(jTFDNI.getText()));
        alumno.setApellido(jTFApellido.getText());
        alumno.setNombre(jTFNombre.getText());
        alumno.setFechaNac(jDateChooser1.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
        
        //Asigna los datos en pantalla al alumno
        aludata.modificarAlumno(alumno);
        deshabilitarBotones();
    }//GEN-LAST:event_jBActualizarActionPerformed

    private void jBRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRestaurarActionPerformed
        aludata.altaAlumnoBorrado(Integer.parseInt(jTFidAlumno.getText()));
        jRBEstado.setSelected(true);
        deshabilitarBotones();
    }//GEN-LAST:event_jBRestaurarActionPerformed

    private void jTFDNIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFDNIKeyTyped
       String str = jTFDNI.getText() + evt.getKeyChar();
                if (!str.matches("\\d*")) {
                    evt.consume(); // Consumir el evento para evitar que se escriba el carÃ¡cter
                }

    }//GEN-LAST:event_jTFDNIKeyTyped

    private void jTFApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFApellidoKeyTyped
        validarNombres(evt);
    }//GEN-LAST:event_jTFApellidoKeyTyped

    private void jTFNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNombreKeyTyped
        validarNombres(evt);
    }//GEN-LAST:event_jTFNombreKeyTyped

    private void jTFDNIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFDNIKeyReleased
        validarDNI();
    }//GEN-LAST:event_jTFDNIKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBActualizar;
    private javax.swing.JButton jBBorrar;
    private javax.swing.JButton jBBuscas;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBLimpiar;
    private javax.swing.JButton jBRestaurar;
    private com.toedter.calendar.JCalendar jCalendar1;
    private com.toedter.calendar.JCalendar jCalendar2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLApellido;
    private javax.swing.JLabel jLApellido1;
    private javax.swing.JLabel jLApellido2;
    private javax.swing.JLabel jLDNI;
    private javax.swing.JLabel jLEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLidAlumno;
    private javax.swing.JRadioButton jRBEstado;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTFApellido;
    private javax.swing.JTextField jTFDNI;
    private javax.swing.JTextField jTFNombre;
    private javax.swing.JTextField jTFidAlumno;
    // End of variables declaration//GEN-END:variables
   
    public void limpiar() {
        jTFidAlumno.setText("");
        jTFDNI.setText("");
        jTFApellido.setText("");
        jTFNombre.setText("");
        jDateChooser1.setDate(null);
        jRBEstado.setSelected(false);
    }
    
     private void deshabilitarBotones(){
        
        if(jTFidAlumno.getText().isEmpty()){
            jBRestaurar.setEnabled(false);
            jBBorrar.setEnabled(false);
        } else if (jRBEstado.isSelected()){
            jBBorrar.setEnabled(true);
            jBRestaurar.setEnabled(false);
        }else {
            jBBorrar.setEnabled(false);
            jBRestaurar.setEnabled(true);
        }
    }
     
    private void validarDNI(){
        try{
        int dni = Integer.parseInt(jTFDNI.getText());
        
        if(dni > 99999999 || dni<999999){
            jTFDNI.setToolTipText("DNI InvÃ¡lido");
            jTFDNI.setForeground(Color.red);
            jBGuardar.setEnabled(false);
            jBActualizar.setEnabled(false);
        } else {
            jTFDNI.setForeground(Color.black);
            jBGuardar.setEnabled(true);
            jBActualizar.setEnabled(true);
        }
        }catch (NumberFormatException nfe) {
            return;
        }
    }

    private void validarNombres(java.awt.event.KeyEvent evt){
        String str = jTFApellido.getText() + evt.getKeyChar();
            if (!str.matches("[\\p{L} ']+")) {
                evt.consume(); // Consumir el evento para evitar que se escriba el carÃ¡cter
            }
    }
}
